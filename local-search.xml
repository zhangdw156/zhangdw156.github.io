<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>L2-007 家庭房产</title>
    <link href="/2023/05/19/L2-007-%E5%AE%B6%E5%BA%AD%E6%88%BF%E4%BA%A7/"/>
    <url>/2023/05/19/L2-007-%E5%AE%B6%E5%BA%AD%E6%88%BF%E4%BA%A7/</url>
    
    <content type="html"><![CDATA[<h2 id="L2-007-家庭房产"><a href="#L2-007-家庭房产" class="headerlink" title="L2-007 家庭房产"></a>L2-007 家庭房产</h2><p>给定每个人的家庭成员和其自己名下的房产，请你统计出每个家庭的人口数、人均房产面积及房产套数。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出一个正整数<em>N</em>（≤1000），随后<em>N</em>行，每行按下列格式给出一个人的房产：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">编号 父 母 k 孩子1 <span class="hljs-string">...</span> 孩子k 房产套数 总面积<br></code></pre></td></tr></table></figure><p>其中<code>编号</code>是每个人独有的一个4位数的编号；<code>父</code>和<code>母</code>分别是该编号对应的这个人的父母的编号（如果已经过世，则显示<code>-1</code>）；<code>k</code>（0≤<code>k</code>≤5）是该人的子女的个数；<code>孩子i</code>是其子女的编号。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>首先在第一行输出家庭个数（所有有亲属关系的人都属于同一个家庭）。随后按下列格式输出每个家庭的信息：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">家庭成员的最小编号 家庭人口数 人均房产套数 人均房产面积<br></code></pre></td></tr></table></figure><p>其中人均值要求保留小数点后3位。家庭信息首先按人均面积降序输出，若有并列，则按成员编号的升序输出。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs in">10<br>6666 5551 5552 1 7777 1 100<br>1234 5678 9012 1 0002 2 300<br>8888 -1 -1 0 1 1000<br>2468 0001 0004 1 2222 1 500<br>7777 6666 -1 0 2 300<br>3721 -1 -1 1 2333 2 150<br>9012 -1 -1 3 1236 1235 1234 1 100<br>1235 5678 9012 0 1 50<br>2222 1236 2468 2 6661 6662 1 300<br>2333 -1 3721 3 6661 6662 6663 1 100<br></code></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs out">3<br>8888 1 1.000 1000.000<br>0001 15 0.600 100.000<br>5551 4 0.750 100.000<br></code></pre></td></tr></table></figure><h3 id="代码（25-x2F-25）"><a href="#代码（25-x2F-25）" class="headerlink" title="代码（25&#x2F;25）"></a>代码（25&#x2F;25）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;map&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;set&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">fam</span><br>&#123;<br><span class="hljs-type">int</span> id,num;<br><span class="hljs-type">double</span> avg1,avg2;<br>&#125;;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">10000</span>;<br><span class="hljs-type">int</span> father[N];<br><span class="hljs-type">int</span> root[N];<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(<span class="hljs-keyword">struct</span> fam a,<span class="hljs-keyword">struct</span> fam b)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(a.avg2 != b.avg2)<br><span class="hljs-keyword">return</span> a.avg2 &gt; b.avg2;<br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">return</span> a.id &lt; b.id;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Init</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; N; i++)<br>&#123;<br>father[i] = i;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">Find</span><span class="hljs-params">(<span class="hljs-type">int</span> a)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">while</span>(father[a] != a)<br>a = father[a];<br><span class="hljs-keyword">return</span> a;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Union</span><span class="hljs-params">(<span class="hljs-type">int</span> a,<span class="hljs-type">int</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> fa = <span class="hljs-built_in">Find</span>(a);<br><span class="hljs-type">int</span> fb = <span class="hljs-built_in">Find</span>(b);<br><span class="hljs-keyword">if</span>(fa &gt; fb)<br>father[fa] = fb;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(fa &lt; fb)<br>father[fb] = fa;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> n;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br><span class="hljs-built_in">Init</span>();<br>map&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt; mp1;<br>map&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt; mp2;<br>map&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt; mp3;<br>map&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt; mp4;<br>set&lt;<span class="hljs-type">int</span>&gt; st;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>&#123;<br><span class="hljs-type">int</span> id,dad,mom,k;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d%d&quot;</span>,&amp;id,&amp;dad,&amp;mom,&amp;k);<br>st.<span class="hljs-built_in">insert</span>(id);<br><span class="hljs-keyword">if</span>(dad != <span class="hljs-number">-1</span>)<br>&#123;<br>st.<span class="hljs-built_in">insert</span>(dad);<br>    <span class="hljs-built_in">Union</span>(id,dad);<br>&#125;<br><span class="hljs-keyword">if</span>(mom != <span class="hljs-number">-1</span>)<br>&#123;<br>st.<span class="hljs-built_in">insert</span>(mom);<br><span class="hljs-built_in">Union</span>(id,mom);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; k; j++)<br>&#123;<br><span class="hljs-type">int</span> child;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;child);<br><span class="hljs-built_in">Union</span>(id,child);<br>st.<span class="hljs-built_in">insert</span>(child);<br>&#125;<br><span class="hljs-type">int</span> house,area;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;house,&amp;area);<br>mp1[id] = house;<br>mp2[id] = area;<br>&#125;<br>set&lt;<span class="hljs-type">int</span>&gt;::iterator it;<br><span class="hljs-type">int</span> count = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(it = st.<span class="hljs-built_in">begin</span>(); it != st.<span class="hljs-built_in">end</span>(); it++)<br>&#123;<br><span class="hljs-type">int</span> temp = <span class="hljs-built_in">Find</span>(*it);<br><span class="hljs-keyword">if</span>(root[temp] == <span class="hljs-number">0</span>)<br>count++;<br>root[temp]++;<br><span class="hljs-keyword">if</span>(mp1[*it])<br>&#123;<br>mp3[temp] += mp1[*it];<br>mp4[temp] += mp2[*it];<br>&#125;<br>&#125;<br><span class="hljs-function">vector&lt;fam&gt; <span class="hljs-title">v</span><span class="hljs-params">(count)</span></span>;<br><span class="hljs-type">int</span> t = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; N; i++)<br>&#123;<br><span class="hljs-keyword">if</span>(root[i])<br>&#123;<br>v[t].id = i;<br>v[t].num = root[i];<br>v[t].avg1 = mp3[i] * <span class="hljs-number">1.0</span> / root[i];<br>v[t].avg2 = mp4[i] * <span class="hljs-number">1.0</span> / root[i];<br>t++;<br>&#125;<br>&#125;<br><span class="hljs-built_in">sort</span>(v.<span class="hljs-built_in">begin</span>(),v.<span class="hljs-built_in">end</span>(),cmp);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,count);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; count; i++)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%04d %d %.3lf %.3lf\n&quot;</span>,v[i].id,v[i].num,v[i].avg1,v[i].avg2);<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CSP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>L2-005 集合相似度</title>
    <link href="/2023/05/19/L2-005-%E9%9B%86%E5%90%88%E7%9B%B8%E4%BC%BC%E5%BA%A6/"/>
    <url>/2023/05/19/L2-005-%E9%9B%86%E5%90%88%E7%9B%B8%E4%BC%BC%E5%BA%A6/</url>
    
    <content type="html"><![CDATA[<h2 id="L2-005-集合相似度"><a href="#L2-005-集合相似度" class="headerlink" title="L2-005 集合相似度"></a>L2-005 集合相似度</h2><p>给定两个整数集合，它们的相似度定义为：<em>N**c</em>&#x2F;<em>N**t</em>×100%。其中<em>N**c</em>是两个集合都有的不相等整数的个数，<em>N**t</em>是两个集合一共有的不相等整数的个数。你的任务就是计算任意一对给定集合的相似度。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出一个正整数<em>N</em>（≤50），是集合的个数。随后<em>N</em>行，每行对应一个集合。每个集合首先给出一个正整数<em>M</em>（≤104），是集合中元素的个数；然后跟<em>M</em>个[0,109]区间内的整数。</p><p>之后一行给出一个正整数<em>K</em>（≤2000），随后<em>K</em>行，每行对应一对需要计算相似度的集合的编号（集合从1到<em>N</em>编号）。数字间以空格分隔。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>对每一对需要计算的集合，在一行中输出它们的相似度，为保留小数点后2位的百分比数字。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs in">3<br>3 99 87 101<br>4 87 101 5 87<br>7 99 101 18 5 135 18 99<br>2<br>1 2<br>1 3<br></code></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs out">50.00%<br>33.33%<br></code></pre></td></tr></table></figure><h3 id="代码（21-x2F-25）"><a href="#代码（21-x2F-25）" class="headerlink" title="代码（21&#x2F;25）"></a>代码（21&#x2F;25）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> FOR(i,s,e) for(int i=s;i&lt;=e;i++)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> db1(a) cout&lt;&lt;#a&lt;&lt;<span class="hljs-string">&quot;=&quot;</span>&lt;&lt;a&lt;&lt;endl</span><br><span class="hljs-type">int</span> N,M,K;<br>vector&lt;set&lt;<span class="hljs-type">int</span>&gt;&gt; vs;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    cin&gt;&gt;N;<br>    <span class="hljs-built_in">FOR</span>(i,<span class="hljs-number">1</span>,N)&#123;<br>        cin&gt;&gt;M;<br>        set&lt;<span class="hljs-type">int</span>&gt; tmp;<br>        <span class="hljs-built_in">FOR</span>(j,<span class="hljs-number">1</span>,M)&#123;<br>            <span class="hljs-type">int</span> t;<br>            cin&gt;&gt;t;<br>            tmp.<span class="hljs-built_in">insert</span>(t);<br>        &#125;<br>        vs.<span class="hljs-built_in">push_back</span>(tmp);<br>    &#125;<br>    cin&gt;&gt;K;<br>    set&lt;<span class="hljs-type">int</span>&gt; nt;<br>    <span class="hljs-built_in">FOR</span>(i,<span class="hljs-number">1</span>,K)&#123;<br>        <span class="hljs-type">int</span> a,b;<br>        cin&gt;&gt;a&gt;&gt;b;<br>        nt.<span class="hljs-built_in">clear</span>();<br>        a-=<span class="hljs-number">1</span>;<br>        b-=<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> j:vs[a])&#123;<br>            nt.<span class="hljs-built_in">insert</span>(j);<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> j:vs[b])&#123;<br>            nt.<span class="hljs-built_in">insert</span>(j);<br>        &#125;<br>        <span class="hljs-type">double</span> ans=<span class="hljs-number">100.0</span>*(vs[a].<span class="hljs-built_in">size</span>()+vs[b].<span class="hljs-built_in">size</span>()-nt.<span class="hljs-built_in">size</span>())/nt.<span class="hljs-built_in">size</span>();<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.2f%\n&quot;</span>,ans);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="代码（25-x2F-25）"><a href="#代码（25-x2F-25）" class="headerlink" title="代码（25&#x2F;25）"></a>代码（25&#x2F;25）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> FOR(i,s,e) for(int i=s;i&lt;=e;i++)</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> db1(a) cout&lt;&lt;#a&lt;&lt;<span class="hljs-string">&quot;=&quot;</span>&lt;&lt;a&lt;&lt;endl</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> db3(a,i,j) cout&lt;&lt;#a&lt;&lt;<span class="hljs-string">&quot;[&quot;</span>&lt;&lt;i&lt;&lt;<span class="hljs-string">&quot;][&quot;</span>&lt;&lt;j&lt;&lt;<span class="hljs-string">&quot;]=&quot;</span>&lt;&lt;a[i][j]&lt;&lt;endl</span><br><span class="hljs-type">int</span> N,M,K;<br><span class="hljs-type">int</span> a[<span class="hljs-number">55</span>][<span class="hljs-number">10005</span>];<br><span class="hljs-type">int</span> b[<span class="hljs-number">55</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    cin&gt;&gt;N;<br>    <span class="hljs-built_in">FOR</span>(i,<span class="hljs-number">1</span>,N)&#123;<br>        cin&gt;&gt;M;<br>        <span class="hljs-built_in">FOR</span>(j,<span class="hljs-number">1</span>,M)&#123;<br>            cin&gt;&gt;a[i][j];<br>        &#125;<br>        b[i]=M;<br>        <span class="hljs-built_in">sort</span>(a[i]+<span class="hljs-number">1</span>,a[i]+M+<span class="hljs-number">1</span>);<br>    &#125;<br>    cin&gt;&gt;K;<br>    <span class="hljs-built_in">FOR</span>(t,<span class="hljs-number">1</span>,K)&#123;<br>        <span class="hljs-type">int</span> n1,n2;<br>        cin&gt;&gt;n1&gt;&gt;n2;<br>        <span class="hljs-type">int</span> i=<span class="hljs-number">1</span>,j=<span class="hljs-number">1</span>;<br>        <span class="hljs-type">int</span> nc=<span class="hljs-number">0</span>,nt=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span>(i&lt;=b[n1]&amp;&amp;j&lt;=b[n2])&#123;<br>            <span class="hljs-keyword">if</span>(a[n1][i]==a[n2][j])&#123;<br>                nc++;<br>                i++;<br>                <span class="hljs-keyword">while</span>(a[n1][i]==a[n1][i<span class="hljs-number">-1</span>])&#123;<br>                    i++;<br>                &#125;<br>                j++;<br>                <span class="hljs-keyword">while</span>(a[n2][j]==a[n2][j<span class="hljs-number">-1</span>])&#123;<br>                    j++;<br>                &#125;<br>            &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[n1][i]&lt;a[n2][j])&#123;<br>                i++;<br>                <span class="hljs-keyword">while</span>(a[n1][i]==a[n1][i<span class="hljs-number">-1</span>])&#123;<br>                    i++;<br>                &#125;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                j++;<br>                <span class="hljs-keyword">while</span>(a[n2][j]==a[n2][j<span class="hljs-number">-1</span>])&#123;<br>                    j++;<br>                &#125;<br>            &#125;<br>            nt++;<br>        &#125;<br>        nt+=b[n1]+b[n2]+<span class="hljs-number">2</span>-i-j;<br>        <span class="hljs-type">double</span> ans=<span class="hljs-number">100.0</span>*nc/nt;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.2f%\n&quot;</span>,ans);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CSP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>中国矿大KVM学习搭建</title>
    <link href="/2023/05/13/%E4%B8%AD%E5%9B%BD%E7%9F%BF%E5%A4%A7KVM%E5%AD%A6%E4%B9%A0%E6%90%AD%E5%BB%BA/"/>
    <url>/2023/05/13/%E4%B8%AD%E5%9B%BD%E7%9F%BF%E5%A4%A7KVM%E5%AD%A6%E4%B9%A0%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="实验步骤："><a href="#实验步骤：" class="headerlink" title="实验步骤："></a>实验步骤：</h2><ul><li><p>安装操作系统前需要将虚拟化嵌套功能开启</p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342738.png" alt="img"></p></li><li><p>通过 ip addr 查看 ens33 地址，使用终端工具以管理 IP 登录此虚拟机</p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342781.png" alt="image-20230512174157018"></p></li><li><p>在虚拟机中使用如下命令关闭相应服务</p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342766.png" alt="image-20230512174304831"></p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342815.png" alt="image-20230512174323270"></p></li><li><p>安装虚拟化组件</p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342808.png" alt="image-20230512175439497"></p></li><li><p>查看组件状态</p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342774.png" alt="image-20230512174353134"></p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342310.png" alt="image-20230512174409284"></p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342466.png" alt="image-20230512175225862"></p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342457.png" alt="image-20230512175254306"></p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342518.png" alt="image-20230512175325175"></p></li><li><p>上传 Centos 镜像至&#x2F;opt 中</p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342476.png" alt="image-20230512175512364"></p></li></ul><h2 id="网桥搭建："><a href="#网桥搭建：" class="headerlink" title="网桥搭建："></a>网桥搭建：</h2><ul><li><p>查看网卡信息并修改网卡信息 ens33</p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342510.png" alt="image-20230512175548058"></p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342882.png" alt="image-20230513184448706"></p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342084.png" alt="image-20230512175955313"></p></li><li><p>修改 br0 信息</p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342091.png" alt="image-20230512180629287"></p></li><li><p>关闭 networkmanager</p></li><li><p>重启网络服务</p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342068.png" alt="image-20230513184610564"></p></li></ul><h2 id="VNC-环境搭建："><a href="#VNC-环境搭建：" class="headerlink" title="VNC 环境搭建："></a>VNC 环境搭建：</h2><ul><li><p>安装 vnc 服务</p></li><li><p>vnc 服务配置——宿主机远程控制</p></li><li><p>设置 vnc 连接密码,输入命令 vncpasswd 以后连续输入两次密码，然后直接连 续回车</p></li><li><p>启动 VNC 服务</p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342133.png" alt="image-20230513184048111"></p></li></ul><h2 id="创建虚拟机-VM01："><a href="#创建虚拟机-VM01：" class="headerlink" title="创建虚拟机 VM01："></a>创建虚拟机 VM01：</h2><ul><li><p>使用 default 网络创建虚拟机“VM01”</p></li><li><p>查看 VNC ID</p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342200.png" alt="image-20230513184013723"></p></li><li><p>远程 VNC 登录</p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342475.png" alt="image-20230513183954163"></p></li><li><p>VNC 登录后使用“ip addr”查看当前 IP 地址</p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342581.png" alt="image-20230513230426505"></p></li><li><p>测试与外网连通性</p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342591.png" alt="image-20230513230449345"></p></li></ul><h2 id="修改虚拟机网络为新建网络："><a href="#修改虚拟机网络为新建网络：" class="headerlink" title="修改虚拟机网络为新建网络："></a>修改虚拟机网络为新建网络：</h2><ul><li><p>创建新网络“test”，指定新桥“virbr1”</p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342695.png" alt="image-20230513233346174"></p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342719.png" alt="image-20230513233355936"></p></li><li><p>将虚拟机“VM01”网络修改为新网络“test”</p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342046.png" alt="image-20230513233523901"></p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342038.png" alt="image-20230513233611876"></p><p><img src="https://zhangdw156-img.oss-cn-beijing.aliyuncs.com/img/202305132342277.png" alt="image-20230513233633719"></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>云计算综合实训</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>KVM</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
